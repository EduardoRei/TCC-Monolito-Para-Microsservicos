// <auto-generated />
using System;
using Ecommerce.Migrations.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Ecommerce.Migrations.Migrations
{
    [DbContext(typeof(EcommerceDbContext))]
    partial class EcommerceDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Ecommerce.Migrations.Entities.Carrinho", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Carrinhos");
                });

            modelBuilder.Entity("Ecommerce.Migrations.Entities.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("Ecommerce.Migrations.Entities.Pagamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdCarrinho")
                        .HasColumnType("int");

                    b.Property<int>("IdStatusPagamento")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoPagamento")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorCarrinho")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("IdCarrinho")
                        .IsUnique();

                    b.HasIndex("IdStatusPagamento");

                    b.HasIndex("IdTipoPagamento");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Pagamentos");
                });

            modelBuilder.Entity("Ecommerce.Migrations.Entities.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DataPagamento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataPedido")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdCarrinho")
                        .HasColumnType("int");

                    b.Property<int>("IdStatusPagamento")
                        .HasColumnType("int");

                    b.Property<int>("IdStatusPedido")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<int>("StatusPagamentoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdCarrinho");

                    b.HasIndex("IdStatusPedido");

                    b.HasIndex("IdUsuario");

                    b.HasIndex("StatusPagamentoId");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("Ecommerce.Migrations.Entities.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdCategoria")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PrecoUnitario")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("QuantidadeEstoque")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdCategoria");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("Ecommerce.Migrations.Entities.ProdutoCarrinho", b =>
                {
                    b.Property<int>("IdProduto")
                        .HasColumnType("int");

                    b.Property<int>("IdCarrinho")
                        .HasColumnType("int");

                    b.Property<decimal>("PrecoVendido")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.HasKey("IdProduto", "IdCarrinho");

                    b.HasIndex("IdCarrinho");

                    b.ToTable("ProdutoCarrinhos");
                });

            modelBuilder.Entity("Ecommerce.Migrations.Entities.StatusPagamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("StatusPagamentos");
                });

            modelBuilder.Entity("Ecommerce.Migrations.Entities.StatusPedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("StatusPedidos");
                });

            modelBuilder.Entity("Ecommerce.Migrations.Entities.TipoPagamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TiposPagamento");
                });

            modelBuilder.Entity("Ecommerce.Migrations.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Ecommerce.Migrations.Entities.Carrinho", b =>
                {
                    b.HasOne("Ecommerce.Migrations.Entities.Usuario", "Usuario")
                        .WithMany("Carrinhos")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Ecommerce.Migrations.Entities.Pagamento", b =>
                {
                    b.HasOne("Ecommerce.Migrations.Entities.Carrinho", "Carrinho")
                        .WithOne("Pagamento")
                        .HasForeignKey("Ecommerce.Migrations.Entities.Pagamento", "IdCarrinho")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ecommerce.Migrations.Entities.StatusPagamento", "StatusPagamento")
                        .WithMany("Pagamentos")
                        .HasForeignKey("IdStatusPagamento")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Ecommerce.Migrations.Entities.TipoPagamento", "TipoPagamento")
                        .WithMany("Pagamentos")
                        .HasForeignKey("IdTipoPagamento")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Ecommerce.Migrations.Entities.Usuario", "Usuario")
                        .WithMany("Pagamentos")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Carrinho");

                    b.Navigation("StatusPagamento");

                    b.Navigation("TipoPagamento");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Ecommerce.Migrations.Entities.Pedido", b =>
                {
                    b.HasOne("Ecommerce.Migrations.Entities.Carrinho", "Carrinho")
                        .WithMany("Pedidos")
                        .HasForeignKey("IdCarrinho")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Ecommerce.Migrations.Entities.StatusPedido", "StatusPedido")
                        .WithMany("Pedidos")
                        .HasForeignKey("IdStatusPedido")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Ecommerce.Migrations.Entities.Usuario", "Usuario")
                        .WithMany("Pedidos")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Ecommerce.Migrations.Entities.StatusPagamento", "StatusPagamento")
                        .WithMany()
                        .HasForeignKey("StatusPagamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carrinho");

                    b.Navigation("StatusPagamento");

                    b.Navigation("StatusPedido");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Ecommerce.Migrations.Entities.Produto", b =>
                {
                    b.HasOne("Ecommerce.Migrations.Entities.Categoria", "Categoria")
                        .WithMany("Produtos")
                        .HasForeignKey("IdCategoria")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("Ecommerce.Migrations.Entities.ProdutoCarrinho", b =>
                {
                    b.HasOne("Ecommerce.Migrations.Entities.Carrinho", "Carrinho")
                        .WithMany("ProdutoCarrinhos")
                        .HasForeignKey("IdCarrinho")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ecommerce.Migrations.Entities.Produto", "Produto")
                        .WithMany("ProdutoCarrinhos")
                        .HasForeignKey("IdProduto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carrinho");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("Ecommerce.Migrations.Entities.Carrinho", b =>
                {
                    b.Navigation("Pagamento")
                        .IsRequired();

                    b.Navigation("Pedidos");

                    b.Navigation("ProdutoCarrinhos");
                });

            modelBuilder.Entity("Ecommerce.Migrations.Entities.Categoria", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("Ecommerce.Migrations.Entities.Produto", b =>
                {
                    b.Navigation("ProdutoCarrinhos");
                });

            modelBuilder.Entity("Ecommerce.Migrations.Entities.StatusPagamento", b =>
                {
                    b.Navigation("Pagamentos");
                });

            modelBuilder.Entity("Ecommerce.Migrations.Entities.StatusPedido", b =>
                {
                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("Ecommerce.Migrations.Entities.TipoPagamento", b =>
                {
                    b.Navigation("Pagamentos");
                });

            modelBuilder.Entity("Ecommerce.Migrations.Entities.Usuario", b =>
                {
                    b.Navigation("Carrinhos");

                    b.Navigation("Pagamentos");

                    b.Navigation("Pedidos");
                });
#pragma warning restore 612, 618
        }
    }
}
