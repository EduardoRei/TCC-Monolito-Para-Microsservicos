// <auto-generated />
using System;
using Ecommerce.Migrations.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Ecommerce.Migrations.Migrations
{
    [DbContext(typeof(EcommerceDbContext))]
    [Migration("20250121202431_InclusaoInicial")]
    partial class InclusaoInicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Ecommerce.Migrations.Entities.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("Ecommerce.Migrations.Entities.FormaPagamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FormaPagamento");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Boleto"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Pix"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Cartão de crédito"
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Cartão de débito"
                        });
                });

            modelBuilder.Entity("Ecommerce.Migrations.Entities.Pagamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataPagamento")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdPedido")
                        .HasColumnType("int");

                    b.Property<int>("IdStatusPagamento")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoPagamento")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdPedido")
                        .IsUnique();

                    b.HasIndex("IdStatusPagamento");

                    b.HasIndex("IdTipoPagamento");

                    b.ToTable("Pagamento");
                });

            modelBuilder.Entity("Ecommerce.Migrations.Entities.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DataPagamento")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdPagamento")
                        .HasColumnType("int");

                    b.Property<int>("IdStatusPedido")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<long>("PrecoTotal")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("IdStatusPedido");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Pedido");
                });

            modelBuilder.Entity("Ecommerce.Migrations.Entities.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdCategoria")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PrecoUnitario")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("QuantidadeEstoque")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdCategoria");

                    b.ToTable("Produto");
                });

            modelBuilder.Entity("Ecommerce.Migrations.Entities.ProdutoPedido", b =>
                {
                    b.Property<int>("IdProduto")
                        .HasColumnType("int");

                    b.Property<int>("IdPedido")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("Quantidade_Produto")
                        .HasColumnType("int");

                    b.HasKey("IdProduto", "IdPedido");

                    b.HasIndex("IdPedido");

                    b.ToTable("ProdutoPedido");
                });

            modelBuilder.Entity("Ecommerce.Migrations.Entities.StatusPagamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("StatusPagamento");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Status = "Aguardando pagamento"
                        },
                        new
                        {
                            Id = 2,
                            Status = "Processando pagamento"
                        },
                        new
                        {
                            Id = 3,
                            Status = "Pagamento identificado"
                        },
                        new
                        {
                            Id = 4,
                            Status = "Pagamento negado"
                        });
                });

            modelBuilder.Entity("Ecommerce.Migrations.Entities.StatusPedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("StatusPedido");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Status = "Separando pedido"
                        },
                        new
                        {
                            Id = 2,
                            Status = "Pedido enviado"
                        },
                        new
                        {
                            Id = 3,
                            Status = "Pedido entregue"
                        });
                });

            modelBuilder.Entity("Ecommerce.Migrations.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataCriacaoUsuario")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("Ecommerce.Migrations.Entities.Pagamento", b =>
                {
                    b.HasOne("Ecommerce.Migrations.Entities.Pedido", "Pedido")
                        .WithOne("Pagamento")
                        .HasForeignKey("Ecommerce.Migrations.Entities.Pagamento", "IdPedido")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Ecommerce.Migrations.Entities.StatusPagamento", "StatusPagamento")
                        .WithMany("Pagamento")
                        .HasForeignKey("IdStatusPagamento")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Ecommerce.Migrations.Entities.FormaPagamento", "FormaPagamento")
                        .WithMany("Pagamento")
                        .HasForeignKey("IdTipoPagamento")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("FormaPagamento");

                    b.Navigation("Pedido");

                    b.Navigation("StatusPagamento");
                });

            modelBuilder.Entity("Ecommerce.Migrations.Entities.Pedido", b =>
                {
                    b.HasOne("Ecommerce.Migrations.Entities.StatusPedido", "StatusPedido")
                        .WithMany("Pedido")
                        .HasForeignKey("IdStatusPedido")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Ecommerce.Migrations.Entities.Usuario", "Usuario")
                        .WithMany("Pedido")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("StatusPedido");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Ecommerce.Migrations.Entities.Produto", b =>
                {
                    b.HasOne("Ecommerce.Migrations.Entities.Categoria", "Categoria")
                        .WithMany("Produto")
                        .HasForeignKey("IdCategoria")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("Ecommerce.Migrations.Entities.ProdutoPedido", b =>
                {
                    b.HasOne("Ecommerce.Migrations.Entities.Pedido", "Pedido")
                        .WithMany("ProdutoPedido")
                        .HasForeignKey("IdPedido")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Ecommerce.Migrations.Entities.Produto", "Produto")
                        .WithMany("ProdutoPedido")
                        .HasForeignKey("IdProduto")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Pedido");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("Ecommerce.Migrations.Entities.Categoria", b =>
                {
                    b.Navigation("Produto");
                });

            modelBuilder.Entity("Ecommerce.Migrations.Entities.FormaPagamento", b =>
                {
                    b.Navigation("Pagamento");
                });

            modelBuilder.Entity("Ecommerce.Migrations.Entities.Pedido", b =>
                {
                    b.Navigation("Pagamento")
                        .IsRequired();

                    b.Navigation("ProdutoPedido");
                });

            modelBuilder.Entity("Ecommerce.Migrations.Entities.Produto", b =>
                {
                    b.Navigation("ProdutoPedido");
                });

            modelBuilder.Entity("Ecommerce.Migrations.Entities.StatusPagamento", b =>
                {
                    b.Navigation("Pagamento");
                });

            modelBuilder.Entity("Ecommerce.Migrations.Entities.StatusPedido", b =>
                {
                    b.Navigation("Pedido");
                });

            modelBuilder.Entity("Ecommerce.Migrations.Entities.Usuario", b =>
                {
                    b.Navigation("Pedido");
                });
#pragma warning restore 612, 618
        }
    }
}
